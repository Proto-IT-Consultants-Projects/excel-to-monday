{"version":3,"file":"Dropdown.js","sources":["../../../../../src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props,react/forbid-prop-types */\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport { SIZES, SIZES_VALUES } from \"../../constants\";\nimport React, { forwardRef, useCallback, useMemo, useRef, useState, useEffect } from \"react\";\nimport Select, { InputProps, components, createFilter, ActionMeta } from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport BaseSelect from \"react-select/base\";\nimport { noop as NOOP } from \"lodash-es\";\nimport MenuComponent from \"./components/menu/menu\";\nimport DropdownIndicatorComponent from \"./components/DropdownIndicator/DropdownIndicator\";\nimport OptionComponent from \"./components/option/option\";\nimport SingleValueComponent from \"./components/singleValue/singleValue\";\nimport ClearIndicatorComponent from \"./components/ClearIndicator/ClearIndicator\";\nimport MultiValueContainer from \"./components/MultiValueContainer/MultiValueContainer\";\nimport { isClient } from \"../../utils/ssr-utils\";\nimport {\n  ADD_AUTO_HEIGHT_COMPONENTS,\n  defaultCustomStyles,\n  DROPDOWN_CHIP_COLORS,\n  DROPDOWN_ID,\n  DROPDOWN_INPUT_ARIA_LABEL,\n  DROPDOWN_MENU_ARIA_LABEL,\n  DROPDOWN_MENU_ID,\n  DROPDOWN_MENU_PLACEMENT,\n  DROPDOWN_MENU_POSITION\n} from \"./DropdownConstants\";\nimport generateBaseStyles, { customTheme } from \"./Dropdown.styles\";\nimport Control from \"./components/Control/Control\";\nimport menuStyles from \"./components/menu/menu.module.scss\";\nimport styles from \"./Dropdown.module.scss\";\nimport {\n  DropdownOption,\n  DropdownState,\n  CustomMenuProps,\n  CustomOptionProps,\n  CustomSingleValueProps,\n  DropdownComponentProps\n} from \"./Dropdown.types\";\nimport { VibeComponent, withStaticProps } from \"../../types\";\n\nconst Dropdown: VibeComponent<DropdownComponentProps, HTMLElement> & {\n  size?: typeof SIZES;\n  sizes?: typeof SIZES;\n  chipColors?: typeof DROPDOWN_CHIP_COLORS;\n  menuPlacements?: typeof DROPDOWN_MENU_PLACEMENT;\n  menuPositions?: typeof DROPDOWN_MENU_POSITION;\n  createFilter?: typeof createFilter;\n} = forwardRef(\n  (\n    {\n      className,\n      optionWrapperClassName,\n      singleValueWrapperClassName,\n      dropdownMenuWrapperClassName,\n      placeholder = \"\",\n      disabled = false,\n      readOnly = false,\n      withReadOnlyStyle,\n      onMenuOpen = NOOP,\n      onMenuClose = NOOP,\n      onFocus = NOOP,\n      onBlur = NOOP,\n      onScroll = NOOP,\n      onMenuScrollToBottom = NOOP,\n      onChange: customOnChange = NOOP,\n      searchable = true,\n      captureMenuScroll = false,\n      options = [],\n      defaultValue,\n      value: customValue,\n      noOptionsMessage,\n      openMenuOnFocus,\n      openMenuOnClick,\n      clearable = true,\n      OptionRenderer,\n      optionRenderer,\n      ValueRenderer,\n      valueRenderer,\n      menuRenderer,\n      menuPlacement = Dropdown.menuPlacements.BOTTOM,\n      rtl,\n      size = Dropdown.sizes.MEDIUM,\n      asyncOptions,\n      cacheOptions,\n      defaultOptions,\n      isVirtualized,\n      menuPortalTarget,\n      extraStyles = defaultCustomStyles,\n      maxMenuHeight,\n      menuIsOpen,\n      tabIndex = \"0\",\n      id = DROPDOWN_ID,\n      menuId = DROPDOWN_MENU_ID,\n      menuAriaLabel = DROPDOWN_MENU_ARIA_LABEL,\n      inputAriaLabel = DROPDOWN_INPUT_ARIA_LABEL,\n      autoFocus = false,\n      multi = false,\n      multiline = false,\n      onOptionRemove: customOnOptionRemove,\n      onOptionSelect,\n      onClear,\n      onInputChange = NOOP,\n      closeMenuOnSelect = !multi,\n      closeMenuOnScroll: customCloseMenuOnScroll = false,\n      withMandatoryDefaultOptions = false,\n      isOptionSelected,\n      insideOverflowContainer = false,\n      insideOverflowWithTransformContainer = false,\n      tooltipContent = \"\",\n      onKeyDown = NOOP,\n      isLoading = false,\n      loadingMessage,\n      ariaLabel,\n      tabSelectsValue = true,\n      popupsContainerSelector,\n      filterOption,\n      menuPosition = Dropdown.menuPositions.ABSOLUTE,\n      \"data-testid\": dataTestId,\n      withGroupDivider = false\n    }: DropdownComponentProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const controlRef = useRef();\n    const overrideMenuPortalTarget =\n      menuPortalTarget || (popupsContainerSelector && document.querySelector(popupsContainerSelector));\n    const overrideDefaultValue = useMemo(() => {\n      if (defaultValue) {\n        return Array.isArray(defaultValue)\n          ? (defaultValue as DropdownOption[]).map(df => ({ ...df, isMandatory: true }))\n          : { ...(defaultValue as DropdownOption), isMandatory: true };\n      }\n\n      return defaultValue;\n    }, [defaultValue]);\n\n    BaseSelect.prototype.renderLiveRegion = () => {\n      return null;\n    };\n\n    // SSR support\n    const [WindowedMenuList, setWindowedMenuList] = useState(null);\n    useEffect(() => {\n      if (isClient()) {\n        // Dynamically import the specific named export from react-windowed-select for SSR support\n        import(\"react-windowed-select\").then(module => {\n          setWindowedMenuList(() => module.WindowedMenuList);\n        });\n      }\n    }, []);\n\n    const [selected, setSelected] = useState(overrideDefaultValue || []);\n    const [focusedOptionId, setFocusedOptionId] = useState(\"\");\n    const finalOptionRenderer = optionRenderer || OptionRenderer;\n    const finalValueRenderer = valueRenderer || ValueRenderer;\n    const isControlled = !!customValue;\n    const selectedOptions = customValue ?? selected;\n    const selectedOptionsMap = useMemo(() => {\n      if (Array.isArray(selectedOptions)) {\n        return selectedOptions.reduce((acc, option) => ({ ...acc, [option.value]: option }), {});\n      }\n      return {};\n    }, [selectedOptions]);\n\n    const overrideAriaLabel = useMemo(() => {\n      return (\n        ariaLabel ||\n        `${readOnly ? \"Readonly \" : \"\"} ${tooltipContent} ${\n          Array.isArray(selectedOptions) ? `Selected: ${selectedOptions.map(o => o.label).join(\", \")}` : \"Select\"\n        }`\n      );\n    }, [ariaLabel, readOnly, selectedOptions, tooltipContent]);\n    const value = multi ? selectedOptions : customValue;\n\n    const inlineStyles = useMemo(() => {\n      // We first want to get the default stylized groups (e.g. \"container\", \"menu\").\n      const baseStyles = generateBaseStyles({\n        size,\n        rtl,\n        insideOverflowContainer,\n        controlRef,\n        insideOverflowWithTransformContainer,\n        withGroupDivider\n      });\n\n      type BaseStyles = typeof baseStyles;\n\n      // Then we want to run the consumer's root-level custom styles with our \"base\" override groups.\n      const customStyles = extraStyles(baseStyles);\n\n      // Lastly, we create a style groups object that makes sure we run each custom group with our basic overrides.\n      const mergedStyles: any = Object.entries(customStyles).reduce((accumulator, [stylesGroup, stylesFn]) => {\n        return {\n          ...accumulator,\n          [stylesGroup]: (defaultStyles: BaseStyles, state: DropdownState) => {\n            const providedFn = baseStyles[stylesGroup as keyof BaseStyles];\n            const provided = providedFn ? providedFn(defaultStyles, state) : defaultStyles;\n\n            return stylesFn(provided, state);\n          }\n        };\n      }, {} as BaseStyles);\n\n      if (multi) {\n        if (multiline) {\n          ADD_AUTO_HEIGHT_COMPONENTS.forEach((component: string) => {\n            const original = mergedStyles[component];\n            mergedStyles[component] = (provided: BaseStyles, state: DropdownState) => ({\n              ...original(provided, state),\n              height: \"auto\"\n            });\n          });\n        }\n\n        const originalValueContainer = mergedStyles.valueContainer;\n        mergedStyles.valueContainer = (provided: BaseStyles, state: DropdownState) => ({\n          ...originalValueContainer(provided, state),\n          paddingLeft: 6\n        });\n      }\n\n      return mergedStyles;\n    }, [size, rtl, insideOverflowContainer, insideOverflowWithTransformContainer, extraStyles, multi, multiline]);\n\n    const Menu = useCallback(\n      (props: CustomMenuProps) => (\n        <MenuComponent\n          {...props}\n          id={menuId}\n          ariaLabel={menuAriaLabel}\n          Renderer={menuRenderer}\n          dropdownMenuWrapperClassName={dropdownMenuWrapperClassName}\n          onScroll={onScroll}\n        />\n      ),\n      [dropdownMenuWrapperClassName, menuRenderer, menuId, menuAriaLabel, onScroll]\n    );\n\n    const DropdownIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <DropdownIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const Option = useCallback(\n      (props: CustomOptionProps) => (\n        <OptionComponent\n          setFocusedOptionId={setFocusedOptionId}\n          {...props}\n          Renderer={finalOptionRenderer}\n          optionWrapperClassName={optionWrapperClassName}\n        />\n      ),\n      [finalOptionRenderer, optionWrapperClassName, setFocusedOptionId]\n    );\n\n    const Input = useCallback(\n      (props: InputProps | any) => {\n        const { focusedOptionId, menuIsOpen } = props.selectProps;\n        const ariaActiveDescendant = focusedOptionId && menuIsOpen ? focusedOptionId : \"\";\n        return (\n          <components.Input\n            {...props}\n            aria-activedescendant={ariaActiveDescendant}\n            role=\"combobox\"\n            aria-expanded={!readOnly && menuIsOpen}\n            aria-label={inputAriaLabel}\n            aria-controls={menuId}\n          />\n        );\n      },\n      [menuId, readOnly]\n    );\n\n    const SingleValue = useCallback(\n      (props: CustomSingleValueProps) => (\n        <SingleValueComponent\n          {...props}\n          readOnly={readOnly}\n          Renderer={finalValueRenderer}\n          selectedOption={selectedOptions[0]}\n          singleValueWrapperClassName={singleValueWrapperClassName}\n        />\n      ),\n      [finalValueRenderer, readOnly, selectedOptions, singleValueWrapperClassName]\n    );\n\n    const ClearIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <ClearIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const onOptionRemove = useMemo(() => {\n      return function (optionValue: number, e: React.MouseEvent | React.KeyboardEvent) {\n        if (customOnOptionRemove) {\n          customOnOptionRemove(selectedOptionsMap[optionValue]);\n        }\n        const newSelectedOptions = Array.isArray(selectedOptions)\n          ? selectedOptions.filter(option => option.value !== optionValue)\n          : selectedOptions;\n\n        if (customOnChange) {\n          customOnChange(newSelectedOptions, e);\n        }\n        setSelected(newSelectedOptions);\n      };\n    }, [customOnChange, customOnOptionRemove, selectedOptions, selectedOptionsMap]);\n\n    const customProps = useMemo(\n      () => ({\n        selectedOptions,\n        onSelectedDelete: onOptionRemove,\n        isMultiline: multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        controlRef,\n        tooltipContent,\n        popupsContainerSelector,\n        size\n      }),\n      [\n        selectedOptions,\n        onOptionRemove,\n        multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        tooltipContent,\n        popupsContainerSelector,\n        size\n      ]\n    );\n    const onChange = (option: DropdownOption | DropdownOption[], meta: ActionMeta<DropdownOption>) => {\n      if (customOnChange) {\n        customOnChange(option, meta);\n      }\n\n      switch (meta.action) {\n        case \"select-option\": {\n          const selectedOption = multi ? meta.option : option;\n\n          if (onOptionSelect) {\n            onOptionSelect(selectedOption);\n          }\n\n          if (!isControlled) {\n            setSelected([...selectedOptions, selectedOption]);\n          }\n          break;\n        }\n\n        case \"clear\":\n          if (onClear) {\n            onClear();\n          }\n\n          if (!isControlled) {\n            if (withMandatoryDefaultOptions) setSelected(overrideDefaultValue);\n            else setSelected([]);\n          }\n          break;\n      }\n    };\n\n    const DropDownComponent: React.ElementType = asyncOptions ? AsyncSelect : Select;\n\n    const asyncAdditions = {\n      ...(asyncOptions && {\n        loadOptions: asyncOptions,\n        cacheOptions,\n        ...(defaultOptions && { defaultOptions })\n      })\n    };\n\n    const additions = {\n      ...(!asyncOptions && { options }),\n      ...(multi && {\n        isMulti: true\n      })\n    };\n\n    const closeMenuOnScroll = useCallback(\n      (event: React.FocusEvent) => {\n        const scrolledElement = event.target;\n        if (scrolledElement?.parentElement?.classList.contains(menuStyles.dropdownMenuWrapper)) {\n          return false;\n        }\n        return customCloseMenuOnScroll || insideOverflowContainer || insideOverflowWithTransformContainer;\n      },\n      [insideOverflowContainer, insideOverflowWithTransformContainer, customCloseMenuOnScroll]\n    );\n\n    return (\n      <DropDownComponent\n        className={cx(styles.dropdown, className)}\n        selectProps={customProps}\n        components={{\n          DropdownIndicator,\n          Menu,\n          ClearIndicator,\n          Input,\n          Option,\n          Control,\n          SingleValue,\n          ...(multi && {\n            MultiValue: NOOP, // We need it for react-select to behave nice with \"multi\"\n            ValueContainer: MultiValueContainer\n          }),\n          ...(isVirtualized && WindowedMenuList && { MenuList: WindowedMenuList })\n        }}\n        // When inside scroll we set the menu position by js and we can't follow the drop down location while use scrolling\n        closeMenuOnScroll={closeMenuOnScroll}\n        size={size}\n        noOptionsMessage={noOptionsMessage}\n        placeholder={placeholder}\n        isDisabled={disabled}\n        isClearable={!readOnly && clearable}\n        isSearchable={!readOnly && searchable}\n        readOnly={readOnly}\n        withReadOnlyStyle={withReadOnlyStyle}\n        aria-readonly={readOnly}\n        aria-label={overrideAriaLabel}\n        aria-details={tooltipContent}\n        aria-haspopup=\"listbox\"\n        defaultValue={defaultValue}\n        value={value}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onMenuScrollToBottom={onMenuScrollToBottom}\n        captureMenuScroll={captureMenuScroll}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onInputChange={onInputChange}\n        openMenuOnFocus={openMenuOnFocus}\n        openMenuOnClick={openMenuOnClick}\n        focusedOptionId={focusedOptionId}\n        isRtl={rtl}\n        styles={inlineStyles}\n        theme={customTheme}\n        maxMenuHeight={maxMenuHeight}\n        menuPortalTarget={overrideMenuPortalTarget}\n        menuPlacement={menuPlacement}\n        menuPosition={menuPosition}\n        menuIsOpen={!readOnly && menuIsOpen}\n        tabIndex={tabIndex}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.DROPDOWN, id)}\n        autoFocus={autoFocus}\n        closeMenuOnSelect={closeMenuOnSelect}\n        ref={ref as React.Ref<any>}\n        withMandatoryDefaultOptions={withMandatoryDefaultOptions}\n        isOptionSelected={isOptionSelected}\n        isLoading={isLoading}\n        loadingMessage={loadingMessage}\n        tabSelectsValue={tabSelectsValue}\n        filterOption={filterOption}\n        {...asyncAdditions}\n        {...additions}\n      />\n    );\n  }\n);\n\nexport default withStaticProps(Dropdown, {\n  // TODO Deprecate Dropdown.size in the next major version - use Dropdown.sizes instead\n  size: SIZES,\n  sizes: SIZES,\n  chipColors: DROPDOWN_CHIP_COLORS,\n  menuPlacements: DROPDOWN_MENU_PLACEMENT,\n  menuPositions: DROPDOWN_MENU_POSITION,\n  createFilter: createFilter\n});\n"],"names":["Dropdown","forwardRef","_ref","ref","className","optionWrapperClassName","singleValueWrapperClassName","dropdownMenuWrapperClassName","_ref$placeholder","placeholder","_ref$disabled","disabled","_ref$readOnly","readOnly","withReadOnlyStyle","_ref$onMenuOpen","onMenuOpen","NOOP","_ref$onMenuClose","onMenuClose","_ref$onFocus","onFocus","_ref$onBlur","onBlur","_ref$onScroll","onScroll","_ref$onMenuScrollToBo","onMenuScrollToBottom","_ref$onChange","onChange","customOnChange","_ref$searchable","searchable","_ref$captureMenuScrol","captureMenuScroll","_ref$options","options","defaultValue","customValue","value","noOptionsMessage","openMenuOnFocus","openMenuOnClick","_ref$clearable","clearable","OptionRenderer","optionRenderer","ValueRenderer","valueRenderer","menuRenderer","_ref$menuPlacement","menuPlacement","menuPlacements","BOTTOM","rtl","_ref$size","size","sizes","MEDIUM","asyncOptions","cacheOptions","defaultOptions","isVirtualized","menuPortalTarget","_ref$extraStyles","extraStyles","defaultCustomStyles","maxMenuHeight","menuIsOpen","_ref$tabIndex","tabIndex","_ref$id","id","DROPDOWN_ID","_ref$menuId","menuId","DROPDOWN_MENU_ID","_ref$menuAriaLabel","menuAriaLabel","DROPDOWN_MENU_ARIA_LABEL","_ref$inputAriaLabel","inputAriaLabel","DROPDOWN_INPUT_ARIA_LABEL","_ref$autoFocus","autoFocus","_ref$multi","multi","_ref$multiline","multiline","customOnOptionRemove","onOptionRemove","onOptionSelect","onClear","_ref$onInputChange","onInputChange","_ref$closeMenuOnSelec","closeMenuOnSelect","_ref$closeMenuOnScrol","closeMenuOnScroll","customCloseMenuOnScroll","_ref$withMandatoryDef","withMandatoryDefaultOptions","isOptionSelected","_ref$insideOverflowCo","insideOverflowContainer","_ref$insideOverflowWi","insideOverflowWithTransformContainer","_ref$tooltipContent","tooltipContent","_ref$onKeyDown","onKeyDown","_ref$isLoading","isLoading","loadingMessage","ariaLabel","_ref$tabSelectsValue","tabSelectsValue","popupsContainerSelector","filterOption","_ref$menuPosition","menuPosition","menuPositions","ABSOLUTE","dataTestId","_ref$withGroupDivider","withGroupDivider","controlRef","useRef","overrideMenuPortalTarget","document","querySelector","overrideDefaultValue","useMemo","Array","isArray","map","df","Object","assign","isMandatory","BaseSelect","prototype","renderLiveRegion","_useState","useState","_useState2","_slicedToArray","WindowedMenuList","setWindowedMenuList","useEffect","isClient","import","then","module","_useState3","_useState4","selected","setSelected","_useState5","_useState6","focusedOptionId","setFocusedOptionId","finalOptionRenderer","finalValueRenderer","isControlled","selectedOptions","selectedOptionsMap","reduce","acc","option","_defineProperty","overrideAriaLabel","concat","o","label","join","inlineStyles","baseStyles","generateBaseStyles","customStyles","mergedStyles","entries","accumulator","_ref2","_ref3","stylesGroup","stylesFn","defaultStyles","state","providedFn","provided","ADD_AUTO_HEIGHT_COMPONENTS","forEach","component","original","height","originalValueContainer","valueContainer","paddingLeft","Menu","useCallback","props","React","createElement","MenuComponent","Renderer","DropdownIndicator","DropdownIndicatorComponent","Option","OptionComponent","Input","_props$selectProps","selectProps","components","role","SingleValue","SingleValueComponent","selectedOption","ClearIndicator","ClearIndicatorComponent","optionValue","e","newSelectedOptions","filter","customProps","onSelectedDelete","isMultiline","DropDownComponent","AsyncSelect","Select","asyncAdditions","loadOptions","additions","isMulti","event","scrolledElement","target","parentElement","_a","classList","contains","menuStyles","dropdownMenuWrapper","cx","styles","dropdown","Control","MultiValue","ValueContainer","MultiValueContainer","MenuList","isDisabled","isClearable","isSearchable","meta","action","_toConsumableArray","isRtl","theme","customTheme","getTestId","ComponentDefaultTestId","DROPDOWN","withStaticProps","SIZES","chipColors","DROPDOWN_CHIP_COLORS","DROPDOWN_MENU_PLACEMENT","DROPDOWN_MENU_POSITION","createFilter"],"mappings":"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"}